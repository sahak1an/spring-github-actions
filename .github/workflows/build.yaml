name: "build spring app"

on:
  push:
    branches:
      - "master"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: show content
        run: ls -a

      - uses: ./.github/workflows/build.yaml

  build-gradle:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: maven build without test
        run: mvn --no-transfer-progress install -DskipTests=true

  push-aws:
    runs-on: ubuntu-latest
    needs:
      - run-tests
      - build-gradle
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: build jar
        run: mvn --no-transfer-progress install -DskipTests=true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: springapp
          IMAGE_TAG: 1.0.1
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
